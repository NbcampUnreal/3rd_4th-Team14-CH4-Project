// Fill out your copyright notice in the Description page of Project Settings.

#pragma once

#include "NativeGameplayTags.h"

namespace ITItemGameplayTags
{
	// == 아이템 ==
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item);
	/* 아이템 기타 프래그먼트 */
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Etc);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Etc_FX);
	/* 인벤토리 아이템 */
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Inventory);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Inventory_Potion);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Inventory_Grenade);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Inventory_Attachment);
	/* 장착 아이템 */
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Equipment);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Equipment_Helmet);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Equipment_Shield);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Equipment_Bag);
	/* 탄약 아이템 */
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Ammo);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Ammo_Rifle);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Ammo_Shotgun);
	/* 무기 아이템 */
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Weapon);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Weapon_Rifle);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Item_Weapon_Shotgun);

	/* Weapon Ability Input Config Tag */
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Weapon_Fire);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(InputTag_Weapon_Reload);

	/* Weapon Ability Tag */
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Weapon_Cooldown);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Weapon_Damage);

	/* Ammo GameplayEffect Tag */
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ammo_Reload);
	IMITATIONTRIGGER_API UE_DECLARE_GAMEPLAY_TAG_EXTERN(Ammo_Consume);
}
